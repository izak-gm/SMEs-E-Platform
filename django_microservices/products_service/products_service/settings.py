"""
Django settings for products_service project.

Generated by 'django-admin startproject' using Django 5.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
from pathlib import Path
import requests
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-#e((0q0@q0@6)jym604d-*u+^p2pu918-ub*g(0+-+zp1imzie'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bizhub_products',
    'rest_framework',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'products_service.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'products_service.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases
CONFIG_SERVER_URL = config('CONFIG_SERVER_URL', default='http://localhost:8888')
SERVER_NAME = config('SERVER_NAME', default='products-service')

try:
    response = requests.get(f"{CONFIG_SERVER_URL}/{SERVER_NAME}/default")
    response.raise_for_status()
    properties = response.json().get('propertySources', [])
    config_data = {}
    for source in properties:
        config_data.update(source.get('source', {}))
except Exception as e:
    print(f" Warning: Could not load from spring Config Server: {e}")
    config_data = {}

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'HOST': config_data.get('django.database.host'),
        'PORT': config_data.get('django.database.port'),
        'NAME': config_data.get('django.database.name'),
        'USER': config_data.get('django.database.user'),
        'PASSWORD': config_data.get('django.database.password'),
    }
}

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

MINIO_ENDPOINT = config_data.get('django.minio.MINIO_ENDPOINT')
MINIO_ACCESS_KEY = config_data.get('django.minio.MINIO_ACCESS_KEY')
MINIO_SECRET_KEY = config_data.get('django.minio.MINIO_SECRET_KEY')
MINIO_BUCKET = config_data.get('django.minio.MINIO_BUCKET')

#jwt_token to verify token from spring boot Auth service
REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        'django_microservices.common.auth.authentication.SharedJWTAuthentication',
    ]
}

# Kafka config
KAFKA_BOOTSTRAP_SERVER = config_data.get('django.kafka.KAFKA_BOOTSTRAP')

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
